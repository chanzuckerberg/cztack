{
  "//": "NOTE: Generated by scripts/snowflake_generate_grant_all.\n\tChanges made directly to this file will be overwritten.\n\tMake improvements there so everyone can benefit.\n  The reason this module exists is that the provider only supports one grant resource per (database_name, schema_name, table_name, on_future, with_grant_option) tuple.\n\tFor example, if you used this module to grant an ALL privilege to a role you couldn't grant a subset of the ALL privs to another role.",
  "variable": {
    "database_name": {
      "type": "string",
      "description": "The name of the database containing the current stage on which to grant privileges.",
      "default": null
    },
    "enable_multiple_grants": {
      "type": "bool",
      "description": "When this is set to true, multiple grants of the same type can be created. This will cause Terraform to not revoke grants applied to roles and objects outside Terraform.",
      "default": null
    },
    "on_future": {
      "type": "bool",
      "description": "When this is set to true and a schema_name is provided, apply this grant on all future stages in the given schema. When this is true and no schema_name is provided apply this grant on all future stages in the given database. The stage_name field must be unset in order to use on_future.",
      "default": null
    },
    "per_privilege_grants": {
      "type": "map(object({roles = list(string)}))",
      "description": "A map of privileges to authorized roles and shares. Privileges must be UPPER case.\n  This allows you to authorize extra roles/shares for specific privileges.",
      "default": {}
    },
    "roles": {
      "type": "set(string)",
      "description": "Grants privilege to these roles.",
      "default": null
    },
    "schema_name": {
      "type": "string",
      "description": "The name of the schema containing the current stage on which to grant privileges.",
      "default": null
    },
    "stage_name": {
      "type": "string",
      "description": "The name of the stage on which to grant privilege (only valid if on_future is false).",
      "default": null
    },
    "with_grant_option": {
      "type": "bool",
      "description": "When this is set to true, allows the recipient role to grant the privileges to other roles.",
      "default": null
    }
  },
  "locals": {
    "privileges": [
      "OWNERSHIP",
      "READ",
      "USAGE",
      "WRITE"
    ]
  },
  "resource": {
    "snowflake_stage_grant": {
      "all": {
        "database_name": "${var.database_name}",
        "enable_multiple_grants": "${var.enable_multiple_grants}",
        "for_each": "${toset(local.privileges)}",
        "on_future": "${var.on_future}",
        "privilege": "${each.value}",
        "roles": "${setunion(\n\t\t\t\tvar.roles,\n\t\t\t\tlookup(var.per_privilege_grants, each.value, { roles = [] }).roles,\n\t\t\t\t)}",
        "schema_name": "${var.schema_name}",
        "stage_name": "${var.stage_name}",
        "with_grant_option": "${var.with_grant_option}"
      }
    }
  },
  "terraform": {
    "required_providers": {
      "snowflake": {
        "source": "Snowflake-Labs/snowflake",
        "version": "\u003e= 0.20.0"
      }
    }
  },
  "output": {
    "privileges": {
      "description": "Privileges that make up the ALL set.",
      "value": "${local.privileges}"
    }
  }
}